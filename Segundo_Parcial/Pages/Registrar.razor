@page "/registrar"
@inject IRepositorioRobos RepositorioRobos
@inject HttpClient Http
@using System.Net.Http
@using System.Net.Http.Json
@inject NavigationManager NavigationManager

<div class="row justify-content-center">
    <div class="col-10 text-center">
        <h1 class="alert alert-info">Registro de Robos</h1>
    </div>
</div>

<div class="row justify-content-center mt-5">
    <div class="col-8">
        <div class="card shadow p-3 mb-5 bg-body rounded">
          <div class="card-header">
            <div class="navbar navbar-light bg-light">
              <div class="container-fluid">
                <a class="navbar-brand"></a>
                <div class="d-flex">
                  <input class="form-control me-2 mr-2" type="search" @bind-value="cedula" placeholder="Buscar" aria-label="Buscar">
                  <button class="btn btn-outline-success" @onclick="ObternerDatos">Buscar</button>
                </div>
              </div>
            </div>
          </div>
            <EditForm Model="oRobos" OnValidSubmit="@(() => GuardarDato())"> 
                <div class="card-body">
                    <DataAnnotationsValidator/>
                    <div class="row justify-content-center mb-3">
                        <div class="col-5">
                            <label>Nombre: </label>
                            <InputText @bind-Value="oRobos.nombre" class="form-control"/>
                            <ValidationMessage For="() => oRobos.nombre"/>
                        </div>
                        <div class="col-5">
                            <label>Cedula: </label>
                            <InputText @bind-Value="oRobos.cedula" class="form-control"/>
                            <ValidationMessage For="() => oRobos.cedula"/>
                        </div>
                    </div>
                    <div class="row justify-content-center mb-3">
                        <div class="col-5">
                            <label>Fecha: </label>
                            <InputDate @bind-Value="oRobos.fecha" class="form-control"/>
                            <ValidationMessage For="() => oRobos.fecha"/>
                        </div>
                        <div class="col-5">
                            <label>Valor: </label>
                            <InputNumber @bind-Value="oRobos.valor" class="form-control"/>
                            <ValidationMessage For="() => oRobos.valor"/>
                        </div>
                    </div>
                    <div class="row justify-content-center mb-3">
                        <div class="col-5">
                            <label>Lugar: </label>
                            <InputText @bind-Value="oRobos.lugar" class="form-control"/>
                            <ValidationMessage For="() => oRobos.lugar"/>
                        </div>
                        <div class="col-5"></div>
                    </div>
                    <div class="row justify-content-center">
                        <div class="col-10">
                            <label>Informaci√≥n: </label>
                            <InputTextArea @bind-Value="oRobos.info_robo" class="form-control"/>
                            <ValidationMessage For="() => oRobos.info_robo"/>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row justify-content-center">
                        <button type="submit" class="btn btn-outline-primary col-8 bn-lg">Guardar</button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>


@code{
    Tb_robos oRobos = new Tb_robos();
    string cedula = "";
    private async Task ObternerDatos(){
        if(cedula != ""){
            oRobos = await RepositorioRobos.GetTb_Robos(cedula);
        }
    }
    private async Task GuardarDato(){
        //Para obtener la latitud y longitud mediante la ip
        var datos = Http.GetFromJsonAsync<Localicacion>("http://ip-api.com/json/");
        var rs = datos.Result;

        //Guardando el Registro
        oRobos.latitud = rs.lat.ToString();
        oRobos.longitud = rs.lon.ToString();
        var crear = await RepositorioRobos.Add(oRobos);

        if(crear == null){
            await RepositorioRobos.Update(oRobos.id, oRobos);
        }
        NavigationManager.NavigateTo("/");
    }
    protected override void OnInitialized()
    {
        oRobos.fecha = DateTime.Now;
    }
}        